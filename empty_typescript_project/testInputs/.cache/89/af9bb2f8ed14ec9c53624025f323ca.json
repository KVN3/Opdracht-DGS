{"id":"ts/types/GameObject.ts","dependencies":[{"name":"C:\\Users\\user\\Downloads\\wetransfer-ebf2ca\\Opdracht DGS\\empty_typescript_project\\testInputs\\tsconfig.json","includedInParent":true,"mtime":1591965039774},{"name":"C:\\Users\\user\\Downloads\\wetransfer-ebf2ca\\Opdracht DGS\\empty_typescript_project\\testInputs\\.babelrc","includedInParent":true,"mtime":1586259187841},{"name":"C:\\Users\\user\\Downloads\\wetransfer-ebf2ca\\Opdracht DGS\\empty_typescript_project\\testInputs\\package.json","includedInParent":true,"mtime":1591968314471}],"generated":{"js":"\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar GameObject = /*#__PURE__*/function () {\n  _createClass(GameObject, [{\n    key: \"getSprite\",\n    value: function getSprite() {\n      return this._sprite;\n    }\n  }]);\n\n  function GameObject(position) {\n    _classCallCheck(this, GameObject);\n\n    this.position = position;\n    this._sprite = new PIXI.Sprite();\n  }\n\n  _createClass(GameObject, [{\n    key: \"draw\",\n    value: function draw() {}\n  }, {\n    key: \"setFrame\",\n    value: function setFrame(rectangle) {\n      this._sprite.texture.frame = rectangle;\n    }\n  }]);\n\n  return GameObject;\n}();\n\nexports.GameObject = GameObject;"},"sourceMaps":{"js":{"mappings":[{"source":"ts/types/GameObject.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":13,"column":4}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":9,"column":20},"generated":{"line":16,"column":32}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":9,"column":38},"generated":{"line":17,"column":0}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":9,"column":45},"generated":{"line":17,"column":13}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":9,"column":50},"generated":{"line":17,"column":18}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":9,"column":38},"generated":{"line":17,"column":25}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":9,"column":60},"generated":{"line":18,"column":0}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":21,"column":0}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":11,"column":23},"generated":{"line":21,"column":22}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":21,"column":30}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":11,"column":40},"generated":{"line":21,"column":32}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":11,"column":40},"generated":{"line":22,"column":0}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":13,"column":8},"generated":{"line":24,"column":0}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":13,"column":13},"generated":{"line":24,"column":9}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":13,"column":8},"generated":{"line":24,"column":17}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":13,"column":24},"generated":{"line":24,"column":20}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":13,"column":8},"generated":{"line":24,"column":28}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":14,"column":8},"generated":{"line":25,"column":0}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":14,"column":13},"generated":{"line":25,"column":9}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":14,"column":8},"generated":{"line":25,"column":16}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":14,"column":23},"generated":{"line":25,"column":19}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":14,"column":27},"generated":{"line":25,"column":23}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":14,"column":31},"generated":{"line":25,"column":27}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":14,"column":32},"generated":{"line":25,"column":28}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":14,"column":23},"generated":{"line":25,"column":34}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":14,"column":8},"generated":{"line":25,"column":36}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":15,"column":5},"generated":{"line":26,"column":0}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":30,"column":27}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":23,"column":5},"generated":{"line":30,"column":28}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":25,"column":23},"generated":{"line":33,"column":29}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":25,"column":48},"generated":{"line":33,"column":40}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":34,"column":0}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":26,"column":13},"generated":{"line":34,"column":11}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":34,"column":18}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":26,"column":21},"generated":{"line":34,"column":19}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":34,"column":26}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":26,"column":29},"generated":{"line":34,"column":27}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":34,"column":32}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":26,"column":37},"generated":{"line":34,"column":35}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":34,"column":44}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":27,"column":5},"generated":{"line":35,"column":0}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":41,"column":0}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":41,"column":7}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":41,"column":8}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":41,"column":18}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":41,"column":21}},{"source":"ts/types/GameObject.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":41,"column":31}}],"sources":{"ts/types/GameObject.ts":"import { Snake } from \"~ts/objects/Snake\";\r\nimport { IDrawable } from \"./IDrawable\";\r\nimport { Vector2 } from \"./Vector2\";\r\n\r\nexport abstract class GameObject implements IDrawable {\r\n    public position: Vector2;\r\n    \r\n    protected _sprite: PIXI.Sprite;\r\n    public getSprite(): PIXI.Sprite { return this._sprite; }\r\n\r\n    public constructor(position: Vector2)\r\n    {\r\n        this.position = position;\r\n        this._sprite = new PIXI.Sprite();\r\n    }\r\n\r\n    public abstract onCollision(snake: Snake): void;\r\n    public abstract update(position: Vector2): void;\r\n\r\n    public draw()\r\n    {\r\n\r\n    }\r\n\r\n    protected setFrame(rectangle: PIXI.Rectangle){\r\n        this._sprite.texture.frame = rectangle;  \r\n    }\r\n}"},"lineCount":null}},"error":null,"hash":"38e82da84d5240c841895be2bcfb6634","cacheData":{"env":{}}}