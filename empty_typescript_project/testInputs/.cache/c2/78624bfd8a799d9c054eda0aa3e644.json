{"id":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","dependencies":[{"name":"C:\\Users\\user\\Downloads\\wetransfer-ebf2ca\\empty_typescript_project\\testInputs\\tsconfig.json","includedInParent":true,"mtime":1586339395332},{"name":"C:\\Users\\user\\Downloads\\wetransfer-ebf2ca\\empty_typescript_project\\testInputs\\.babelrc","includedInParent":true,"mtime":1586259187841},{"name":"C:\\Users\\user\\Downloads\\wetransfer-ebf2ca\\empty_typescript_project\\testInputs\\package.json","includedInParent":true,"mtime":1591451587737}],"generated":{"js":"\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar OfficeCalendar = /*#__PURE__*/function () {\n  function OfficeCalendar() {\n    _classCallCheck(this, OfficeCalendar);\n  }\n\n  _createClass(OfficeCalendar, [{\n    key: \"postEvent\",\n    value: function postEvent() {\n      console.log(\"Posting event to Office Calendar using their method name.\");\n    }\n  }, {\n    key: \"getEvents\",\n    value: function getEvents() {\n      console.log(\"Retrieving Office events using specific method name.\");\n    }\n  }]);\n\n  return OfficeCalendar;\n}();\n\nexports.OfficeCalendar = OfficeCalendar;"},"sourceMaps":{"js":{"mappings":[{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":13,"column":4}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":3,"column":20},"generated":{"line":20,"column":32}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":4,"column":8},"generated":{"line":21,"column":0}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":4,"column":8},"generated":{"line":21,"column":6}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":4,"column":15},"generated":{"line":21,"column":13}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":4,"column":16},"generated":{"line":21,"column":14}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":4,"column":8},"generated":{"line":21,"column":17}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":4,"column":20},"generated":{"line":21,"column":18}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":4,"column":8},"generated":{"line":21,"column":77}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":5,"column":5},"generated":{"line":22,"column":0}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":7,"column":20},"generated":{"line":25,"column":32}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":8,"column":8},"generated":{"line":26,"column":0}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":8,"column":8},"generated":{"line":26,"column":6}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":8,"column":15},"generated":{"line":26,"column":13}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":26,"column":14}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":8,"column":8},"generated":{"line":26,"column":17}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":8,"column":20},"generated":{"line":26,"column":18}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":8,"column":8},"generated":{"line":26,"column":72}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":9,"column":5},"generated":{"line":27,"column":0}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":33,"column":0}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":33,"column":7}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":33,"column":8}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":33,"column":22}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":33,"column":25}},{"source":"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":33,"column":39}}],"sources":{"ts/design_pattern_examples/6_adapter/adaptees/OfficeCalendar.ts":"// Some fake API class that lets us post and get events from the calendar\r\nexport class OfficeCalendar {\r\n    public postEvent(): void {\r\n        console.log(\"Posting event to Office Calendar using their method name.\");\r\n    }\r\n\r\n    public getEvents(): void {\r\n        console.log(\"Retrieving Office events using specific method name.\");\r\n    }\r\n}"},"lineCount":null}},"error":null,"hash":"55d40d87dfc0dad14d679dc422e0bc50","cacheData":{"env":{}}}