{"id":"../node_modules/mongodb-typescript/lib/repository.js","dependencies":[{"name":"C:\\Users\\user\\Downloads\\wetransfer-ebf2ca\\Opdracht DGS\\empty_typescript_project\\testInputs\\node_modules\\mongodb-typescript\\lib\\repository.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\user\\Downloads\\wetransfer-ebf2ca\\Opdracht DGS\\empty_typescript_project\\testInputs\\package.json","includedInParent":true,"mtime":1591902486937},{"name":"C:\\Users\\user\\Downloads\\wetransfer-ebf2ca\\Opdracht DGS\\empty_typescript_project\\testInputs\\.babelrc","includedInParent":true,"mtime":1586259187841},{"name":"C:\\Users\\user\\Downloads\\wetransfer-ebf2ca\\Opdracht DGS\\empty_typescript_project\\testInputs\\node_modules\\mongodb-typescript\\package.json","includedInParent":true,"mtime":1591900633311},{"name":"class-transformer","loc":{"line":11,"column":36},"parent":"C:\\Users\\user\\Downloads\\wetransfer-ebf2ca\\Opdracht DGS\\empty_typescript_project\\testInputs\\node_modules\\mongodb-typescript\\lib\\repository.js","resolved":"C:\\Users\\user\\Downloads\\wetransfer-ebf2ca\\Opdracht DGS\\empty_typescript_project\\testInputs\\node_modules\\class-transformer\\index.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst class_transformer_1 = require(\"class-transformer\");\nfunction dehydrate(entity, idField) {\n    // const plain = classToPlain(entity) as any;\n    if (!entity)\n        return entity;\n    const refs = Reflect.getMetadata('mongo:refs', entity) || {};\n    for (let name in refs) {\n        const ref = refs[name];\n        const reffedEntity = entity[name];\n        if (reffedEntity) {\n            if (!ref.array) {\n                const idField = Reflect.getMetadata('mongo:id', reffedEntity);\n                entity[ref.id] = reffedEntity[idField];\n            }\n            else {\n                entity[ref.id] = reffedEntity.map((e) => e[Reflect.getMetadata('mongo:id', e)]);\n            }\n        }\n    }\n    const plain = Object.assign({}, entity);\n    if (idField && idField !== '_id') {\n        plain._id = plain[idField];\n        delete plain[idField];\n    }\n    for (let name in refs) {\n        delete plain[name];\n    }\n    const nested = Reflect.getMetadata('mongo:nested', entity) || [];\n    for (let { name, array } of nested) {\n        if (plain[name]) {\n            if (!array) {\n                plain[name] = dehydrate(plain[name]);\n            }\n            else {\n                plain[name] = plain[name].map((e) => dehydrate(e));\n            }\n        }\n    }\n    const ignores = Reflect.getMetadata('mongo:ignore', entity) || {};\n    for (const name in ignores) {\n        delete plain[name];\n    }\n    return plain;\n}\nexports.dehydrate = dehydrate;\nclass Repository {\n    constructor(Type, mongo, collection, options = {}) {\n        this.Type = Type;\n        this.collection = mongo.db(options.databaseName).collection(collection);\n        this.idField = Reflect.getMetadata('mongo:id', this.Type.prototype);\n        if (!this.idField)\n            throw new Error(`repository cannot be created for entity '${Type.name}' because none of its properties has @id decorator'`);\n        if (options.autoIndex)\n            this.createIndexes(true);\n    }\n    /**\n     * Underlying mongodb collection (use with caution)\n     * any of methods from this will not return hydrated objects\n     */\n    get c() {\n        return this.collection;\n    }\n    createIndexes(forceBackground = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const indexes = Reflect.getMetadata('mongo:indexes', this.Type.prototype) || [];\n            if (indexes.length == 0)\n                return null;\n            if (forceBackground) {\n                for (let index of indexes) {\n                    index.background = true;\n                }\n            }\n            return this.collection.createIndexes(indexes);\n        });\n    }\n    insert(entity) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const plain = dehydrate(entity, this.idField);\n            const res = yield this.collection.insertOne(plain);\n            entity[this.idField] = res.insertedId;\n        });\n    }\n    update(entity, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const plain = dehydrate(entity, this.idField);\n            yield this.collection.replaceOne({ _id: entity[this.idField] }, plain, options);\n        });\n    }\n    save(entity) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!entity[this.idField])\n                yield this.insert(entity);\n            else\n                yield this.update(entity);\n        });\n    }\n    findOne(query = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.hydrate(yield this.collection.findOne(query));\n        });\n    }\n    findById(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.findOne({ _id: id });\n        });\n    }\n    findManyById(ids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.find({ _id: { $in: ids } }).toArray();\n        });\n    }\n    remove(entity) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.c.deleteOne({ _id: entity[this.idField] });\n        });\n    }\n    /**\n     * calls mongodb.find function and returns its cursor with attached map function that hydrates results\n     * mongodb.find: http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#find\n     */\n    find(query) {\n        return this.collection.find(query).map(doc => this.hydrate(doc));\n    }\n    populate(entity, refName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const refs = Reflect.getMetadata('mongo:refs', entity) || {};\n            const ref = refs[refName];\n            if (!ref)\n                throw new Error(`cannot find ref '${refName}' on '${entity.constructor.name}'`);\n            // if (ref.typeFunction().prototype !== this.Type.prototype)\n            // throw new Error(`incompatible repository: expected ${ref.typeFunction().name}, got ${this.Type.name}`);\n            if (!ref.array) {\n                entity[refName] = yield this.findById(entity[ref.id]);\n            }\n            else {\n                entity[refName] = yield this.findManyById(entity[ref.id]);\n            }\n        });\n    }\n    populateMany(entities, refName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (entities.length === 0)\n                return;\n            const refs = Reflect.getMetadata('mongo:refs', entities[0]) || {};\n            const ref = refs[refName];\n            // if (ref.typeFunction().prototype !== this.Type.prototype)\n            // throw new Error(`incompatible repository: expected ${ref.typeFunction().name}, got ${this.Type.name}`);\n            const referenced = yield this.findManyById(entities.map((entity) => entity[ref.id]));\n            for (let entity of entities) {\n                entity[refName] = referenced.find(r => r[this.idField].equals(entity[ref.id]));\n            }\n        });\n    }\n    /**\n     * Gets the number of documents matching the filter.\n     * http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#estimatedDocumentCount\n     * http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#countDocuments\n     * @param estimate whether estimatedDocumentCount or countDocuments will be called.\n     * @returns integer\n     */\n    count(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.collection.countDocuments(query);\n        });\n    }\n    hydrate(plain) {\n        return plain ? class_transformer_1.plainToClass(this.Type, plain) : null;\n    }\n}\nexports.Repository = Repository;\n"},"sourceMaps":{"js":{"version":3,"file":"repository.js","sourceRoot":"","sources":["../src/repository.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"3fc7cb50f3a9d39b4d4821237f1dc82f","cacheData":{"env":{}}}