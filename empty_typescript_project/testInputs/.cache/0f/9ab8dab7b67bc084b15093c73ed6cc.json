{"id":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","dependencies":[{"name":"C:\\Users\\user\\Downloads\\wetransfer-ebf2ca\\empty_typescript_project\\testInputs\\tsconfig.json","includedInParent":true,"mtime":1586339395332},{"name":"C:\\Users\\user\\Downloads\\wetransfer-ebf2ca\\empty_typescript_project\\testInputs\\.babelrc","includedInParent":true,"mtime":1586259187841},{"name":"C:\\Users\\user\\Downloads\\wetransfer-ebf2ca\\empty_typescript_project\\testInputs\\package.json","includedInParent":true,"mtime":1591451587737}],"generated":{"js":"\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EnemyFactory = /*#__PURE__*/function () {\n  function EnemyFactory() {\n    _classCallCheck(this, EnemyFactory);\n  }\n\n  _createClass(EnemyFactory, [{\n    key: \"spawnEnemy\",\n    value: function spawnEnemy() {\n      var enemy = this.createEnemy();\n      enemy.spawn();\n      enemy.attack();\n    }\n  }]);\n\n  return EnemyFactory;\n}();\n\nexports.EnemyFactory = EnemyFactory;"},"sourceMaps":{"js":{"mappings":[{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":13,"column":4}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":10,"column":21},"generated":{"line":20,"column":33}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":11,"column":8},"generated":{"line":21,"column":0}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":11,"column":14},"generated":{"line":21,"column":10}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":11,"column":19},"generated":{"line":21,"column":15}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":11,"column":22},"generated":{"line":21,"column":18}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":11,"column":27},"generated":{"line":21,"column":23}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":11,"column":22},"generated":{"line":21,"column":34}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":11,"column":8},"generated":{"line":21,"column":36}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":14,"column":8},"generated":{"line":22,"column":0}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":14,"column":8},"generated":{"line":22,"column":6}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":14,"column":13},"generated":{"line":22,"column":11}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":14,"column":14},"generated":{"line":22,"column":12}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":14,"column":8},"generated":{"line":22,"column":17}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":23,"column":0}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":23,"column":6}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":15,"column":13},"generated":{"line":23,"column":11}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":15,"column":14},"generated":{"line":23,"column":12}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":23,"column":18}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":16,"column":5},"generated":{"line":24,"column":0}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":30,"column":0}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":30,"column":7}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":30,"column":8}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":30,"column":20}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":30,"column":23}},{"source":"ts/design_pattern_examples/2_factory/EnemyFactory.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":30,"column":35}}],"sources":{"ts/design_pattern_examples/2_factory/EnemyFactory.ts":"import { IEnemy } from \"./Enemies/IEnemy\";\r\n\r\n// Base class for enemy factories\r\nexport abstract class EnemyFactory {\r\n\r\n    // Abstract method to be overriden by specific enemy factories\r\n    public abstract createEnemy(): IEnemy;\r\n\r\n    // Does some stuff using the create enemy, in this case it creates an enemy, spawns it and then has it attack\r\n    public spawnEnemy(): void {\r\n        const enemy = this.createEnemy();\r\n  \r\n        // Instantiate enemy and do some stuff\r\n        enemy.spawn();\r\n        enemy.attack();\r\n    }\r\n}"},"lineCount":null}},"error":null,"hash":"b3278aa8a9dc564eb7613043d508be96","cacheData":{"env":{}}}